plugins {
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
}

group = "com.example.dynamic_api"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.5.4'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// client
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.3.0'
//	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer:4.3.0'
//	implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.16'
//	implementation 'io.github.openfeign:feign-httpclient:13.6'

//	implementation 'org.mvel:mvel2:2.5.2.Final'
//	implementation 'org.drools:drools-core:10.1.0'

	testImplementation 'junit:junit:4.13.2'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
	implementation 'org.json:json:20250517'

	implementation 'org.apache.commons:commons-jexl3:3.3'
}

bootRun {
	jvmArgs = ["-Djava.library.path=${projectDir}/native"]
}
